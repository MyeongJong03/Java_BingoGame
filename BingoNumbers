
import java.util.Scanner;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.*;
import java.awt.*;
import java.io.File;
import java.io.FileNotFoundException;


@SuppressWarnings("serial")
public class BingoNumbers extends JComponent
{

	public static ArrayList <Integer> numbers = new ArrayList<Integer>();
    public static ArrayList <Integer> pnumbers = new ArrayList<Integer>();
    public static ArrayList <Integer> Callednumbers = new ArrayList<Integer>();
    

   
    //numbers에 이미 있는 값인지 체크
//    public boolean isFound(int value)
//    {
//        for (int x : numbers) {
//            if (value == (int) x)
//                return true;
//        }
//        return false;
//    }
    

    //원래 컴퓨터의 단어 선택을 해주는 부분이었는데 이 기능을 BingoGridComputer 클래스에 넣고
    //여기는 사용자가 입력한 값을 pnumbers에 넣어주는 역할만 한다.
    public void generateNumber(int wnum) {
    	pnumbers.add(wnum);
    }
    
    
    
    //단어 넣어주는 역할
    private int number=0;
    private Map<Integer, Quiz> voc = new HashMap<>();
    
    void addWord(Quiz quiz ) {
		voc.put(number++, quiz);
	}

    void makeVoc() {

		try (Scanner scan = new Scanner(new File("quiz.txt"))) {
			while (scan.hasNextLine()) {
				String str = scan.nextLine();
				String[] temp = str.split("\t");
				this.addWord(new Quiz(temp[0].trim(), temp[1].trim()));
			}

		} catch (FileNotFoundException e) { 
			System.out.println("\n파일명을 확인하세요.");
		}
	}
    
    

    //단어를 나타내주는 부분이다
    public void paintComponent(Graphics g) {
    	makeVoc();
        Graphics2D g2 = (Graphics2D) g;

        //안티앨리어싱 이용 
        g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
        
        int fontSize = 35;
        Font font = new Font("SansSerif", Font.PLAIN, fontSize);
        g2.setFont(font);
        
        String call1 = "player ";
        g2.setFont(new Font("SansSerif", Font.BOLD, fontSize));
        
        g2.drawString(call1, BingoGame.WIDTH / 2 - 380, 40);
        
        
        if (!pnumbers.isEmpty()) {
        	int xCoord = BingoGame.WIDTH /2 - 410;
            int yCoord = 80;
            g2.setFont(new Font("SansSerif", Font.BOLD, fontSize-10));
            g2.setColor(Color.BLUE);
            
            //단어를 잘못 입력한 경우 pnumber에 -1이 저장되도록 해주었음 BingoGame클래스 191-201줄
        	if(pnumbers.get(pnumbers.size()-1) == -1) {
        		g2.drawString("선택한 단어 단어장에 없음", xCoord-45, yCoord);
        	}
        	else {
	            int numberp = pnumbers.get(pnumbers.size() - 1);
	           
	            //모든 칸에 랜덤하게 단어를 넣는 방식이 아닌 한 줄에 15단어라는 제한을 걸어두고 
	            //각 줄에 맞는 알파벳을 같이 출력해주었다. 
	            if (numberp <= 15) {
	                g2.drawString("A-" + voc.get(numberp).eng+" : "+voc.get(numberp).kor, xCoord, yCoord);
	            } else if (numberp <= 30) {
	                g2.drawString("B-" + voc.get(numberp).eng+" : "+voc.get(numberp).kor, xCoord, yCoord);
	            } else if (numberp <= 45) {
	                g2.drawString("C-" + voc.get(numberp).eng+" : "+voc.get(numberp).kor, xCoord, yCoord);
	            } else if (numberp <= 60) {
	                g2.drawString("D-" + voc.get(numberp).eng+" : "+voc.get(numberp).kor, xCoord, yCoord);
	            } else if (numberp <= 75) {
	                g2.drawString("E-" + voc.get(numberp).eng+" : "+voc.get(numberp).kor, xCoord, yCoord);
	            } else if (numberp <= 90) {
	                g2.drawString("F-" + voc.get(numberp).eng+" : "+voc.get(numberp).kor, xCoord, yCoord);
	            } else if (numberp <= 105) {
	                g2.drawString("G-" + voc.get(numberp).eng+" : "+voc.get(numberp).kor, xCoord, yCoord);
	            }
        	}
        }
        
        
        String call2 = "computer ";
        g2.setFont(new Font("SansSerif", Font.BOLD, fontSize));
        g2.setColor(Color.BLACK);
        g2.drawString(call2, BingoGame.WIDTH / 2 + 200, 40);
        
        
        if (!numbers.isEmpty()) {
        	int number;
        	number = numbers.get(numbers.size() - 1);
        	
        	
            int xCoord = BingoGame.WIDTH / 2 + 200;
            int yCoord = 80;
            g2.setFont(new Font("SansSerif", Font.BOLD, fontSize-10));
            g2.setColor(Color.BLUE);
            
            
            if (number <= 15) {
                g2.drawString("A-" + voc.get(number).eng+" : "+voc.get(number).kor, xCoord, yCoord);
            } else if (number <= 30) {
                g2.drawString("B-" + voc.get(number).eng+" : "+voc.get(number).kor, xCoord, yCoord);
            } else if (number <= 45) {
                g2.drawString("C-" + voc.get(number).eng+" : "+voc.get(number).kor, xCoord, yCoord);
            } else if (number <= 60) {
                g2.drawString("D-" + voc.get(number).eng+" : "+voc.get(number).kor, xCoord, yCoord);
            } else if (number <= 75) {
                g2.drawString("E-" + voc.get(number).eng+" : "+voc.get(number).kor, xCoord, yCoord);
            } else if (number <= 90) {
                g2.drawString("F-" + voc.get(number).eng+" : "+voc.get(number).kor, xCoord, yCoord);
            } else if (number <= 105) {
                g2.drawString("G-" + voc.get(number).eng+" : "+voc.get(number).kor, xCoord, yCoord);
            }
        }
    }
    
}
